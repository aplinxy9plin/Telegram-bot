const Telegraf = require('telegraf')
const Markup = require('telegraf/markup')

var mysql = require('mysql');

var empty = require('is-empty');

var con = mysql.createConnection({
  host: "localhost",
  user: "top4ek",
  password: "q2w3e4r5",
  database: "telegram"
});

con.connect(function(err) {
  if (err) throw err;
  con.query("SELECT * FROM coffee", function (err, result, fields) {
    if (err) throw err;
    //global.status = result[1].count;
    console.log('Connect to database is successful');
  });
});

// –î–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç–∫—É–¥–∞
const shippingOptions = [
  {
    id: 'first',
    title: '–ù–∞—Ö–∏–º–æ–≤–∞ 30',
    prices: [{ label: 'Unicorn', amount: 0 }]
  },
  {
    id: 'second',
    title: '–ë–µ–ª–∏–Ω—Å–∫–æ–≥–æ 51',
    prices: [{ label: 'Slowpoke', amount: 0 }]
  }
]

const black = ['–ê–º–µ—Ä–∏–∫–∞–Ω–æ 100‚ÇΩ','–î–≤–æ–π–Ω–æ–π 100‚ÇΩ','–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ —Å –º–æ–∂–µ–≤–µ–ª—å–Ω–∏–∫–æ–º 100‚ÇΩ','–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ —Å –∫–∞—Ä–¥–∞–º–æ–Ω–æ–º 100‚ÇΩ']
const classic = ['–ú–∞–ª–µ–Ω—å–∫–∏–π –ª–∞—Ç—Ç–µ 100‚ÇΩ','–ë–æ–ª—å—à–æ–π –ª–∞—Ç—Ç–µ 200‚ÇΩ','–ú–∞–ª–µ–Ω—å–∫–∏–π –ö–∞–ø—É—á–∏–Ω–æ 100‚ÇΩ','–ë–æ–ª—å—à–æ–π –ö–∞–ø—É—á–∏–Ω–æ 200‚ÇΩ','–†–∞—Ñ 100‚ÇΩ','–§–ª—ç—Ç –≤–∞–π—Ç 100‚ÇΩ','–°–æ–µ–≤—ã–π –ª–∞—Ç—Ç–µ –º–∞–ª—ã–π 100‚ÇΩ','–°–æ–µ–≤—ã–π –ª–∞—Ç—Ç–µ –±–æ–ª—å—à–æ–π 200‚ÇΩ']
const author = ['–õ–∞–≤–∞–Ω–¥–æ–≤—ã–π —Ä–∞—Ñ 100‚ÇΩ','–†–æ–∑–æ–≤—ã–π –º—É–∂—Å–∫–æ–π –ª–∞—Ç—Ç–µ 100‚ÇΩ','–ú–µ–¥–æ–≤–æ-–∏–º–±–∏—Ä–Ω—ã–π –∫–∞–ø—É—á–∏–Ω–æ 100‚ÇΩ','–ö–æ–∫–æ–ª–∞—Ç—Ç–µ 100‚ÇΩ','–ò–º–±–∏—Ä–Ω–æ-–∂–∞—Å–º–∏–Ω–æ–≤—ã–π –ª–∞—Ç—Ç–µ 100‚ÇΩ','–ö–µ–¥—Ä–æ–≤—ã–π –ª–∞—Ç—Ç–µ –º–∞–ª–µ–Ω—å–∫–∏–π 100‚ÇΩ','–ö–µ–¥—Ä–æ–≤—ã–π –ª–∞—Ç—Ç–µ –±–æ–ª—å—à–æ–π 200‚ÇΩ','–¶–∏—Ç—Ä—É—Å–æ–≤—ã–π —Ä–∞—Ñ –º–∞–ª–µ–Ω—å–∫–∏–π 100‚ÇΩ','–¶–∏—Ç—Ä—É—Å–æ–≤—ã–π —Ä–∞—Ñ –±–æ–ª—å—à–æ–π 200‚ÇΩ','–ö–ª–∞—É–¥ –ß–°–ú –º–∞–ª–µ–Ω—å–∫–∏–π 100‚ÇΩ','–ö–ª–∞—É–¥ –ß–°–ú –±–æ–ª—å—à–æ–π 200‚ÇΩ','–ö—Ä–µ–º –±—Ä—é–ª–µ –º–∞–ª–µ–Ω—å–∫–∏–π 100‚ÇΩ','–ö—Ä–µ–º –±—Ä—é–ª–µ –±–æ–ª—å—à–æ–π 200‚ÇΩ','–ü—Ä–æ–≤–∞–Ω—Å–∫–∏–π –ª–∞—Ç—Ç–µ 100‚ÇΩ','–ì—Ä—É—à–µ–≤–∞—è —Å–∞–º–±—É–∫–∞ 100‚ÇΩ']
const chocolate = ['–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥ —Å –∑–µ—Ñ–∏—Ä–∫–∞–º–∏ 100‚ÇΩ','–ö–∞–∫–∞–æ 100‚ÇΩ','–ö–∞–∫–∞–æ —Å –∑–µ—Ñ–∏—Ä–∫–∞–º–∏ 100‚ÇΩ','–Ø–≥–æ–¥–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫:–±—Ä—É—Å–Ω–∏–∫–∞ —Å –º—è—Ç–æ–π 100‚ÇΩ','–Ø–≥–æ–¥–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫: –æ–±–ª–∏–ø–∏—Ö–∞ —Å –º–æ–∂–µ–≤–µ–ª—å–Ω–∏–∫–æ–º 100‚ÇΩ']
const alternative =['–ö–æ–ª–¥–±—Ä—é 100‚ÇΩ','–ü—É—Ä–æ–≤–µ—Ä (V60) 100‚ÇΩ','–ö–µ–º–µ–∫—Å 100‚ÇΩ','–ê—ç—Ä–æ–ø—Ä–µ—Å—Å 100‚ÇΩ']
const replyOptions = Markup.inlineKeyboard([
  Markup.payButton('üí∏ Buy'),
  Markup.urlButton('‚ù§Ô∏è', 'http://telegraf.js.org')
]).extra()

const bot = new Telegraf('378976409:AAGnz9MmrNIJTATv6TFNYe_kg12liaLusMk')
bot.start((ctx) => {
  var query = con.query("SELECT chat_id, status FROM coffee WHERE chat_id = "+ctx.from.id+"", function (err, result, fields) {
    if (err) throw err;
    //global.status = result[1].count;
    console.log(result[0]);
    if(result[0] == undefined){
      var sql = "INSERT INTO coffee (chat_id, user_name) VALUES ("+ctx.from.id+", '"+ctx.from.username+"')";
      con.query(sql, function (err, result) {
        if (err) throw err;
        console.log("User recorded to database");
      });
      ctx.reply('–ü—Ä–∏–≤–µ—Ç, –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞–ø–∏—à–∏ –º–Ω–µ /start')
    }else{
      var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ',''];
      hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
      console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
      updateStatus(1,ctx.from.id)
    }
  })
})
bot.command('/buy', ({ replyWithInvoice }) => replyWithInvoice(invoice, replyOptions))
bot.on('pre_checkout_query', ({ answerPreCheckoutQuery }) => answerPreCheckoutQuery(true))
bot.on('successful_payment', (ctx) => {
    console.log('Payed successful')
    ctx.reply('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–∞—Ä–∏—Å—Ç—ã.')
})
bot.on('message', (ctx) => {
    var chat_id = ctx.from.id;
    var query = con.query("SELECT chat_id, status, coffee, price FROM coffee WHERE chat_id = "+chat_id+"", function (err, result, fields) {
        if (err) throw err;
        var status = result[0].status;
        var answer = ctx.message.text
        var replace = result[0].coffee.split('$').join('\n')
        //console.log(replace)
        if(answer == '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑'){
            var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ',''];
            hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
            updateStatus(1, chat_id);
            console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
        }        
        if(status == 1){
            if(answer == '–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ'){
                easy_keyboard(ctx, '–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ', black)
                updateStatus(2, chat_id)
            }
            if(answer == '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º'){
                easy_keyboard(ctx, '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º', classic)
                updateStatus(2, chat_id)
            }
            if(answer == '–ê–≤—Ç–æ—Ä—Å–∫–∏–µ'){
                easy_keyboard(ctx, '–ê–≤—Ç–æ—Ä—Å–∫–∏–µ', author)
                updateStatus(2, chat_id)
            }
            if(answer == '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ'){
                easy_keyboard(ctx, '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ', alternative)
                updateStatus(2, chat_id)
            }
            if(answer == '–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ'){
                easy_keyboard(ctx, '–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ', chocolate)
                updateStatus(2, chat_id)
            }
        }
        if(status == 2){
            if(answer == '–í—ã–±—Ä–∞—Ç—å –µ—â–µ'){
                var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ',''];
                hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                updateStatus(1, chat_id);
            }
            if(answer == '–ó–∞–∫–æ–Ω—á–∏—Ç—å'){
                ctx.reply('–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É')
                //easy_keyboard(ctx, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–±–∞–≤–∫—É.',['–°–∏—Ä–∏–ø 1','–°–∏—Ä–æ–ø 2','–°–∏—Ä–æ–ø 3','–°–ø–∞—Å–∏–±–æ, –Ω–∏—á–µ–≥–æ'])
                updateStatus(3, chat_id)
            }
            if(answer !== '–í—ã–±—Ä–∞—Ç—å –µ—â–µ' && answer !== '–ó–∞–∫–æ–Ω—á–∏—Ç—å'){
                easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏: '+answer+'', ['–í—ã–±—Ä–∞—Ç—å –µ—â–µ', '–ó–∞–∫–æ–Ω—á–∏—Ç—å',''])
                var enter = result[0].coffee + ' ' + answer + '$'
                var price = result[0].price + parseInt(retnum(answer), 10)
                var sql = "UPDATE coffee SET coffee = '"+enter+"', price = "+price+" WHERE chat_id = "+chat_id+"";
                con.query(sql, function (err, result) {
                  if (err) throw err;
                  console.log(result.affectedRows + " record(s) updated");
                });
            }
        }
        /*if(status == 17){
            easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+answer+'\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–±–∞–≤–∫—É.',['–°–∏—Ä–∏–ø 1','–°–∏—Ä–æ–ø 2','–°–∏—Ä–æ–ø 3','–°–ø–∞—Å–∏–±–æ, –Ω–∏—á–µ–≥–æ'])
            updateStatus(17,chat_id)
            else{
                updateStatus(3,chat_id)
                ctx.reply('–í—ã –≤—ã–±—Ä–∞–ª–∏ '+answer+'\n–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É')
            }
        }
        if(status == 18){
            easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏: '+answer+'', ['–í—ã–±—Ä–∞—Ç—å –µ—â–µ', '–ó–∞–∫–æ–Ω—á–∏—Ç—å',''])
            if(answer == '–°–ø–∞—Å–∏–±–æ, –Ω–∏—á–µ–≥–æ'){
                updateStatus(3,chat_id)
            }else{
                updateStatus(3,chat_id)
            easy_keyboard(ctx, '–í—ã –≤—ã–±—Ä–∞–ª–∏ '+answer+'\n–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É', ['–í—ã–±—Ä–∞—Ç—å –µ—â–µ', '–ó–∞–∫–æ–Ω—á–∏—Ç—å',''])
            }
        }*/
        if(status == 3){
            if (!isNaN(answer)) {
                easy_keyboard(ctx,'–û–∂–∏–¥–∞—Ç—å –≤–∞—Å —á–µ—Ä–µ–∑ '+answer+' –º–∏–Ω—É—Ç?',['–î–∞','–ù–µ—Ç',''])
                updateStatus(4, chat_id)
            }else{
                ctx.reply('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')
            }
        }
        if(status == 4){
            if(answer == '–î–∞'){
                hard_keyboard(ctx,'–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–∫–∞–∑', ['–û–ø–ª–∞—Ç–∞','','–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è','','–£–¥–∞–ª–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å','–î–æ–∑–∞–∫–∞–∑'])
                updateStatus(5, chat_id)
            }else{
                ctx.reply('–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É')
                updateStatus(3, chat_id)
            }
        }
        if(status == 5){
            if(answer == '–û–ø–ª–∞—Ç–∞'){
                ctx.replyWithInvoice(invoice_func(replace,parseInt(result[0].price, 10)*100))
            }
            if(answer == '–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è'){
                ctx.reply('–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤–∞—Å –æ–∂–∏–¥–∞—Ç—å?\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É')
                updateStatus(3,chat_id)
            }
            if(answer == '–£–¥–∞–ª–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å'){
                var order = result[0].coffee.split('$')
                easy_keyboard(ctx,'–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∫–∞–∫–æ–π-—Ç–æ —Ç–æ–≤–∞—Ä –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.',order)
                updateStatus(6, chat_id)
            }
            if(answer == '–î–æ–∑–∞–∫–∞–∑'){
                var array = ['–ö–æ—Ñ–µ','–ß–∞–π','–ü–∏–≤–æ','–ü–∏—Ä–æ–∂–Ω—ã–µ','–î–µ—Å–µ—Ä—Ç—ã','–ß–∏–∑–∫–µ–π–∫–∏'];
                hard_keyboard(ctx, '–ú–µ–Ω—é:', array);
                updateStatus(1,chat_id)
            }
        }
        // –£–¥–∞–ª–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å
        if(status == 6){
            var order = result[0].coffee.split('$')
            for (var i = 0; i < order.length; i++) {
                //console.log(order[i]+'\n')
                if(' '+answer == order[i]){
                    order.splice(i, 1)
                    //console.log(order)
                    var sql = "UPDATE coffee SET coffee = '"+order.join("$")+"', status = 5 WHERE chat_id = "+chat_id+"";
                        con.query(sql, function (err, result) {
                        if (err) throw err;
                        console.log('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω');
                    });
                    hard_keyboard(ctx,'–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω', ['–û–ø–ª–∞—Ç–∞','','–ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è','','–£–¥–∞–ª–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å','–î–æ–∑–∞–∫–∞–∑'])
                    if((order.length - 1) == 0){
                        var array = ['–ß–µ—Ä–Ω—ã–π –∫–æ—Ñ–µ','–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π c –º–æ–ª–æ–∫–æ–º','–ê–≤—Ç–æ—Ä—Å–∫–∏–µ','–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∫–æ—Ñ–µ','–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥, –∫–∞–∫–∞–æ –∏ —è–≥–æ–¥–Ω—ã–µ',''];
                        hard_keyboard(ctx, '–í–∞—à –∑–∞–∫–∞–∑ –ø—É—Å—Ç. –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!', array);
                        updateStatus(1, chat_id);
                        console.log('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑')
                    }
                    break
                }
            }
            console.log(order)
        }
    })
})
bot.command('/qwe', (ctx) => {
    console.log('menu view')
})
//bot.command('/buy', ({ replyWithInvoice }) => replyWithInvoice(invoice, replyOptions))
function updateStatus(status, chat_id){
    var sql = "UPDATE coffee SET status = "+status+" WHERE chat_id = "+chat_id+"";
        con.query(sql, function (err, result) {
        if (err) throw err;
        console.log(result.affectedRows + " record(s) updated");
    });
}
function easy_keyboard(ctx,text,array){
    ctx.reply(text, Markup
        .keyboard(array)
        .oneTime()
        .resize()
        .extra()
    )
}

function hard_keyboard(ctx,text,array){
    ctx.reply(text, Markup
        .keyboard([
          [array[0],array[1]],
          [array[2],array[3]],
          [array[4],array[5]]
        ])
        .oneTime()
        .resize()
        .extra()
    )
}
// menu func

function menu(ctx){
    ctx.reply(text, Markup
        .keyboard([
            ('coke', 'test'),
            'prostakola'
            ])
        .oneTime()
        .resize()
        .extra()
    )
}

function invoice_func(order, price){
    const invoice = {
      provider_token: '361519591:TEST:aec637531815ea231dcf383d4ffce4f4',
      start_parameter: 'coffee',
      title: '–ó–∞–∫–∞–∑',
      description: order,
      currency: 'rub',
      photo_url: 'https://pbs.twimg.com/profile_images/520085024968671233/ul2Omvpm.jpeg',
      prices: [
        { label: '–ó–∞–∫–∞–∑', amount: price }
      ],
      payload: {
        coupon: 'test'
      }
    }
    return invoice
}
function retnum(str) { 
    var num = str.replace(/[^0-9]/g, '')
    return num
}

bot.startPolling()